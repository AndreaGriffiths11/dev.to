{
  "type_of": "article",
  "id": 910633,
  "title": "How to get dev.to posts from the API",
  "description": "I've decided to download my dev.to posts so that I can store them in git.  That means that if the...",
  "readable_publish_date": "Nov 27",
  "slug": "how-to-get-devto-posts-for-the-api-552g",
  "path": "/melvincarvalho/how-to-get-devto-posts-for-the-api-552g",
  "url": "https://dev.to/melvincarvalho/how-to-get-devto-posts-for-the-api-552g",
  "comments_count": 0,
  "public_reactions_count": 8,
  "collection_id": null,
  "published_timestamp": "2021-11-27T11:43:17Z",
  "positive_reactions_count": 8,
  "cover_image": null,
  "social_image": "https://dev.to/social_previews/article/910633.png",
  "canonical_url": "https://dev.to/melvincarvalho/how-to-get-devto-posts-for-the-api-552g",
  "created_at": "2021-11-27T11:43:17Z",
  "edited_at": "2021-11-27T18:37:27Z",
  "crossposted_at": null,
  "published_at": "2021-11-27T11:43:17Z",
  "last_comment_at": "2021-11-27T11:43:17Z",
  "reading_time_minutes": 2,
  "tag_list": "devto, api, javascript, beginners",
  "tags": [
    "devto",
    "api",
    "javascript",
    "beginners"
  ],
  "body_html": "<p>I've decided to download my <a href=\"https://dev.to/\">dev.to</a> posts so that I can store them in git.  That means that if the site ever goes down, I have a copy of my blog content.  The API is documented <a href=\"https://developers.forem.com/api/\">here</a>.</p>\n\n<p>The following endpoint will give a list of articles: <a href=\"https://dev.to/api/articles?username=melvincarvalho\">https://dev.to/api/articles?username=melvincarvalho</a></p>\n\n<p>It supports pagination, each page will contain 30 articles by default.</p>\n\n<p>Replace <code>melvincarvalho</code> with your own username</p>\n\n<p>So I wrote a JavaScript script that will pull out my articles.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight javascript\"><code><span class=\"cp\">#!/usr/bin/env node\n</span>\n<span class=\"c1\">// requires</span>\n<span class=\"kd\">const</span> <span class=\"nx\">argv</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">minimist</span><span class=\"dl\">'</span><span class=\"p\">)(</span><span class=\"nx\">process</span><span class=\"p\">.</span><span class=\"nx\">argv</span><span class=\"p\">.</span><span class=\"nx\">slice</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">))</span>\n<span class=\"kd\">const</span> <span class=\"nx\">$</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">child_process</span><span class=\"dl\">'</span><span class=\"p\">).</span><span class=\"nx\">execSync</span>\n<span class=\"kd\">const</span> <span class=\"nx\">fs</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">fs</span><span class=\"dl\">'</span><span class=\"p\">)</span>\n\n<span class=\"c1\">// data</span>\n<span class=\"nx\">globalThis</span><span class=\"p\">.</span><span class=\"nx\">data</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n  <span class=\"na\">user</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">melvincarvalho</span><span class=\"dl\">'</span><span class=\"p\">,</span>\n  <span class=\"na\">api</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">https://dev.to/api/articles/</span><span class=\"dl\">'</span><span class=\"p\">,</span>\n  <span class=\"na\">datadir</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">.</span><span class=\"dl\">'</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\">// init</span>\n<span class=\"nx\">data</span><span class=\"p\">.</span><span class=\"nx\">user</span> <span class=\"o\">=</span> <span class=\"nx\">argv</span><span class=\"p\">.</span><span class=\"nx\">_</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">||</span> <span class=\"nx\">data</span><span class=\"p\">.</span><span class=\"nx\">user</span>\n<span class=\"nx\">data</span><span class=\"p\">.</span><span class=\"nx\">api</span> <span class=\"o\">=</span> <span class=\"nx\">argv</span><span class=\"p\">.</span><span class=\"nx\">api</span> <span class=\"o\">||</span> <span class=\"nx\">data</span><span class=\"p\">.</span><span class=\"nx\">api</span>\n<span class=\"nx\">data</span><span class=\"p\">.</span><span class=\"nx\">datadir</span> <span class=\"o\">=</span> <span class=\"nx\">argv</span><span class=\"p\">.</span><span class=\"nx\">datadir</span> <span class=\"o\">||</span> <span class=\"nx\">data</span><span class=\"p\">.</span><span class=\"nx\">datadir</span>\n<span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">data</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"nx\">data</span><span class=\"p\">)</span>\n\n<span class=\"c1\">// main</span>\n<span class=\"kd\">const</span> <span class=\"nx\">useruri</span> <span class=\"o\">=</span> <span class=\"s2\">`</span><span class=\"p\">${</span><span class=\"nx\">data</span><span class=\"p\">.</span><span class=\"nx\">api</span><span class=\"p\">}</span><span class=\"s2\">?username=</span><span class=\"p\">${</span><span class=\"nx\">data</span><span class=\"p\">.</span><span class=\"nx\">user</span><span class=\"p\">}</span><span class=\"s2\">`</span>\n<span class=\"kd\">const</span> <span class=\"nx\">cmd</span> <span class=\"o\">=</span> <span class=\"s2\">`curl </span><span class=\"p\">${</span><span class=\"nx\">useruri</span><span class=\"p\">}</span><span class=\"s2\">`</span>\n<span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">cmd</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"nx\">cmd</span><span class=\"p\">)</span>\n\n<span class=\"kd\">const</span> <span class=\"nx\">json</span> <span class=\"o\">=</span> <span class=\"nx\">JSON</span><span class=\"p\">.</span><span class=\"nx\">parse</span><span class=\"p\">(</span><span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"nx\">cmd</span><span class=\"p\">).</span><span class=\"nx\">toString</span><span class=\"p\">())</span>\n<span class=\"kd\">const</span> <span class=\"nx\">output</span> <span class=\"o\">=</span> <span class=\"nx\">JSON</span><span class=\"p\">.</span><span class=\"nx\">stringify</span><span class=\"p\">(</span><span class=\"nx\">json</span><span class=\"p\">,</span> <span class=\"kc\">null</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"kd\">const</span> <span class=\"nx\">outfile</span> <span class=\"o\">=</span> <span class=\"s2\">`</span><span class=\"p\">${</span><span class=\"nx\">data</span><span class=\"p\">.</span><span class=\"nx\">datadir</span><span class=\"p\">}</span><span class=\"s2\">/posts.json`</span>\n<span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">output</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"nx\">output</span><span class=\"p\">)</span>\n\n<span class=\"nx\">fs</span><span class=\"p\">.</span><span class=\"nx\">writeFileSync</span><span class=\"p\">(</span><span class=\"nx\">outfile</span><span class=\"p\">,</span> <span class=\"nx\">output</span><span class=\"p\">)</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p><code>Usage: ./getposts.js [username]</code></p>\n\n<p>First we initialize the endpoint and username.  Then we run some curl to get the result, and finally we format it and write it to a file.</p>\n\n<p>The JSON output can be seen <a href=\"https://melvincarvalho.github.io/dev.to/posts.json\">here</a> and the current script is <a href=\"https://github.com/melvincarvalho/dev.to/blob/gh-pages/bin/getposts.js\">here</a></p>\n\n<p>Now that I have a list of articles, it should be possible to download the markdown from individual articles too.  I will hopefully cover that in a future post.</p>\n\n",
  "body_markdown": "I've decided to download my [dev.to](https://dev.to/) posts so that I can store them in git.  That means that if the site ever goes down, I have a copy of my blog content.  The API is documented [here](https://developers.forem.com/api/).\n\nThe following endpoint will give a list of articles: https://dev.to/api/articles?username=melvincarvalho\n\nIt supports pagination, each page will contain 30 articles by default.\n\nReplace `melvincarvalho` with your own username\n\nSo I wrote a JavaScript script that will pull out my articles.\n\n```JavaScript\n#!/usr/bin/env node\n\n// requires\nconst argv = require('minimist')(process.argv.slice(2))\nconst $ = require('child_process').execSync\nconst fs = require('fs')\n\n// data\nglobalThis.data = {\n  user: 'melvincarvalho',\n  api: 'https://dev.to/api/articles/',\n  datadir: '.'\n}\n\n// init\ndata.user = argv._[0] || data.user\ndata.api = argv.api || data.api\ndata.datadir = argv.datadir || data.datadir\nconsole.log('data', data)\n\n// main\nconst useruri = `${data.api}?username=${data.user}`\nconst cmd = `curl ${useruri}`\nconsole.log('cmd', cmd)\n\nconst json = JSON.parse($(cmd).toString())\nconst output = JSON.stringify(json, null, 2)\nconst outfile = `${data.datadir}/posts.json`\nconsole.log('output', output)\n\nfs.writeFileSync(outfile, output)\n```\n\n`Usage: ./getposts.js [username]`\n\nFirst we initialize the endpoint and username.  Then we run some curl to get the result, and finally we format it and write it to a file.\n\nThe JSON output can be seen [here](https://melvincarvalho.github.io/dev.to/posts.json) and the current script is [here](https://github.com/melvincarvalho/dev.to/blob/gh-pages/bin/getposts.js)\n\nNow that I have a list of articles, it should be possible to download the markdown from individual articles too.  I will hopefully cover that in a future post.",
  "user": {
    "name": "Melvin Carvalho",
    "username": "melvincarvalho",
    "twitter_username": "melvincarvalho",
    "github_username": "melvincarvalho",
    "website_url": "https://melvincarvalho.com/#me",
    "profile_image": "https://res.cloudinary.com/practicaldev/image/fetch/s--WfdMiDbQ--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/448014/8c938ffb-fe97-4763-a32c-acb329fb32d1.jpg",
    "profile_image_90": "https://res.cloudinary.com/practicaldev/image/fetch/s--RdzOJxSE--/c_fill,f_auto,fl_progressive,h_90,q_auto,w_90/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/448014/8c938ffb-fe97-4763-a32c-acb329fb32d1.jpg"
  }
}